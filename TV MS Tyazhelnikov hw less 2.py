#!/usr/bin/env python
# coding: utf-8

# 1. Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8. Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.

# In[5]:


from math import factorial
import math


# In[4]:


C_85_100 = factorial(100) * 0.8**85 * 0.2**15 / (factorial(85) * factorial(100 - 85))
C_85_100


# 2. Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004. В жилом комплексе после ремонта в один день включили 5000 новых лампочек. Какова вероятность, что ни одна из них не перегорит в первый день? Какова вероятность, что перегорят ровно две?

# In[6]:


lam = 5000 * 0.0004
P_m0 = (lam**0 * math.exp(-lam)) / factorial(0)
P_m0


# In[7]:


P_m2 = (lam**2 * math.exp(-lam)) / factorial(2)
P_m2


# 3. Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?

# In[8]:


C_70_144 = factorial(144) * 0.5**70 * 0.5**(144-70) / (factorial(70) * factorial(144 - 70))
C_70_144


# 4. В первом ящике находится 10 мячей, из которых 7 - белые. Во втором ящике - 11 мячей, из которых 9 белых. Из каждого ящика вытаскивают случайным образом по два мяча. Какова вероятность того, что все мячи белые? Какова вероятность того, что ровно два мяча белые? Какова вероятность того, что хотя бы один мяч белый?

# In[9]:


C_all = 7/10 * 6/9 * 9/11 * 8/10
C_all


# In[11]:


C_2_4_w = factorial(4) / (factorial(2) * factorial(4-2)) # 2 из 4 белые
C_2_4_w


# In[23]:


# два белых
C1 = 7/10 * 6/9 * 2/11 * 1/10 # оба белых из первой корзины
C2 = 9/11 * 8/10 * 3/10 * 2/9 # оба белых из второй корзины
C3 = 7/10 * 3/9 * 9/11 * 2/10 # w, nw, w, nw (белый, не белый, белый, не белый)
C4 = 7/10 * 3/9 * 2/11 * 9/10 # w, nw, nw, w
C5 = 3/10 * 7/9 * 9/11 * 2/10 # nw, w, w, nw
C6 = 3/10 * 7/9 * 2/11 * 9/10 # nw, w, nw, w
C_2 = C1 + C2 + C3 + C4 + C5 + C6
C_2


# In[13]:


#один белый
C1w = 7/10 * 3/9 * 2/11 * 1/10 #первым вытянут белый
C2w = 3/10 * 7/9 * 2/11 * 1/10 #вторым вытянут белый
C3w = 3/10 * 2/9 * 9/11 * 2/10
C4w = 3/10 * 2/9 * 2/11 * 9/10
C_1 = C1w + C2w + C3w + C4w
C_1


# In[14]:


C_3_4_w = factorial(4) / (factorial(3) * factorial(4-3)) # 3 из 4 белые
C_3_4_w


# In[15]:


#один не белый
C1nw = 3/10 * 7/9 * 9/11 * 8/10 #первым вытянут не белый
C2nw = 7/10 * 3/9 * 9/11 * 8/10 #вторым вытянут не белый
C3nw = 7/10 * 6/9 * 2/11 * 8/10
C4nw = 7/10 * 6/9 * 9/11 * 2/10
C_3 = C1nw + C2nw + C3nw + C4nw
C_3


# In[24]:


C_1_2_3 = C_1 + C_2 + C_3 + C_all
C_1_2_3


# In[ ]:




